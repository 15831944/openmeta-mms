<Window x:Class="PETBrowser.DatasetListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:petBrowser="clr-namespace:PETBrowser"
        Height="800" Width="1200" Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip" Icon="CyPhyResultsViewer.ico" Closing="Window_Closing" Closed="Window_Closed">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Icons.xaml" />
                <ResourceDictionary Source="Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <petBrowser:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
            <petBrowser:CountAndBoolMultiValueConverter x:Key="CountAndBoolMultiValueConverter" />
            <petBrowser:EqualityMultiValueConverter x:Key="EqualityMultiValueConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.Title>
        <MultiBinding StringFormat="Results Browser ({0}) [Port {1}]">
            <Binding Path="ProjectPath" />
            <Binding Path="ManagerPort" />
        </MultiBinding>
    </Window.Title>
    <DockPanel Background="#FFEEF5FD">
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar x:Name="toolBar" Band="1" BandIndex="1">
                <Button x:Name="NewWindowButton" Click="NewWindowButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource NewWindowIcon}" />
                        <TextBlock Margin="3,0,0,0">New Window</TextBlock>
                    </StackPanel>
                </Button>
                <Separator />
                <Button x:Name="SelectResultsFolderButton" Click="SelectResultsFolderButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource FolderOpenIcon}" />
                        <TextBlock Margin="3,0,0,0">Select Results Folder</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="RefreshButton" Click="RefreshButton_OnClick" IsEnabled="{Binding DatasetLoaded}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource RefreshIcon}" />
                        <TextBlock Margin="3,0,0,0">Refresh</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="CleanupButton" Click="CleanupButton_OnClick" IsEnabled="{Binding DatasetLoaded}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource CleanIcon}" />
                        <TextBlock Margin="3,0,0,0">Cleanup</TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem DockPanel.Dock="Right" Margin="0,0,12,0">
                <StackPanel Orientation="Horizontal" >
                    <ProgressBar Minimum="0" Maximum="{Binding LoadTotalCount}" Value="{Binding LoadProgressCount}" Width="150" Height="12" Margin="0,0,6,0"  Visibility="{Binding IsLoading, Converter={StaticResource BoolVisibilityConverter}}"/>
                    <Button BorderThickness="0" Background="{x:Null}" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" IsTabStop="False" Click="AnalysisToolsButton_Click" ContextMenuService.IsEnabled="False" Padding="3,1" IsEnabled="{Binding JobStore.HasNoRunningJobs}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding JobStore.SelectedThreadCount, StringFormat='Simultaneous processes: {0}'}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="False" >
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Path Margin="6,0,0,0" VerticalAlignment="Center" Width="6" Stretch="Uniform" HorizontalAlignment="Right" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z ">
                                    <Path.Style>
                                        <Style TargetType="Path">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="True" >
                                                    <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="False" >
                                                    <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </StackPanel>
                        </Button.Content>
                        <Button.ContextMenu>
                            <ContextMenu Placement="Bottom" ItemsSource="{Binding JobStore.ThreadOptionsList}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding}" />
                                        <Setter Property="HeaderStringFormat" Value="{}{0} processes"></Setter>
                                        <Setter Property="IsChecked">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource EqualityMultiValueConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.JobStore.SelectedThreadCount" Mode="OneWay" />
                                                    <Binding Mode="OneWay"/>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="IsEnabled">
                                            <Setter.Value>
                                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.JobStore.HasNoRunningJobs" Mode="OneWay" />
                                            </Setter.Value>
                                        </Setter>
                                        <EventSetter Event="Click" Handler="NewCoreCountSelected"></EventSetter>
                                        <Style.Triggers>
                                            <DataTrigger Value="true">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource EqualityMultiValueConverter}">
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.JobStore.PhysicalCoreCount" Mode="OneWay" />
                                                        <Binding Mode="OneWay"/>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="StatusText">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} PET(s); {1} other test bench(es)">
                            <Binding Path="PetDatasets.Count"></Binding>
                            <Binding Path="TestBenchDatasets.Count"></Binding>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <TabControl x:Name="TabControl" Padding="0">
            <TabItem x:Name="PetsTab" Header="PET">
                <Grid Margin="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="4*" MinWidth="400"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" Margin="2">
                        <StackPanel DockPanel.Dock="Top">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Label Margin="5,5,5,5" Padding="5,3">Search:</Label>
                                <TextBox x:Name="PetSearchTextBox" Width="200" Margin="0,5,5,5" Padding="5,3" TextChanged="PetSearchTextBox_TextChanged" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Bottom">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Button x:Name="MergeButton" Content="Merge Selected" Margin="0,10,5,10" Click="MergeButton_OnClick" Padding="5,3" IsEnabled="{Binding DatasetLoaded}"/>
                                <Button x:Name="AnalysisToolsButton" Margin="5,10,5,10" Padding="5,3" Click="AnalysisToolsButton_Click" ContextMenuService.IsEnabled="False" IsEnabled="{Binding DatasetLoaded}">
                                    <Button.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Analyze Selected with Tool">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="False" >
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <Separator Margin="5,0">
                                                <Separator.LayoutTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <TransformCollection>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformCollection>
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Separator.LayoutTransform>
                                            </Separator>
                                            <Path Margin="0" VerticalAlignment="Center" Width="6" Stretch="Uniform" HorizontalAlignment="Right" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z ">
                                                <Path.Style>
                                                    <Style TargetType="Path">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="True" >
                                                                <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="False" >
                                                                <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Path.Style>
                                            </Path>
                                        </StackPanel>
                                    </Button.Content>
                                    <Button.ContextMenu>
                                        <ContextMenu Placement="Bottom" ItemsSource="{Binding AnalysisTools.PetAnalysisToolList}">
                                            <ContextMenu.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Header" Value="{Binding Path=ActionName}" />
                                                    <EventSetter Event="Click" Handler="PetAnalysisToolRun"></EventSetter>
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button x:Name="vizButton" Content="Open Selected in Visualizer"  Margin="5,10,10,10" Click="vizButton_Click" Padding="5,3" IsEnabled="{Binding DatasetLoaded}"/>
                            </StackPanel>
                        </StackPanel>
                        <DataGrid Name="PetGrid" ItemsSource="{Binding PetDatasets, IsAsync=True}"
                                  AutoGenerateColumns="False"
                                  FrozenColumnCount="1"
                                  RowHeight="20"
                                  MaxWidth="2560"
                                  MaxHeight="1600"
                                  EnableRowVirtualization="False"
                                  EnableColumnVirtualization="True"
                                  GridLinesVisibility="Horizontal"
                                  HeadersVisibility="Column"
                                  SelectionChanged="PetGrid_SelectionChanged"
                                  CellStyle="{DynamicResource GridStyle}">
                            <DataGrid.HorizontalGridLinesBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                            </DataGrid.HorizontalGridLinesBrush>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="MergedPetRowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Refresh" Click="RefreshMergedPet" />
                                    <MenuItem Header="Delete..." Click="DeletePetItem" />
                                </ContextMenu>
                                <ContextMenu x:Key="PetRowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Delete..." Click="DeletePetItem" />
                                </ContextMenu>
                                <ContextMenu x:Key="ArchiveRowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Delete..." Click="DeletePetItem" />
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="" Width="30">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=Selected, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" IsEnabled="False" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding Kind}" ClipboardContentBinding="{x:Null}" Header="DataType" IsReadOnly="True" Width="65"/>
                                <DataGridTextColumn Binding="{Binding Count}" ClipboardContentBinding="{x:Null}" Header="Count" IsReadOnly="True" Width="60"/>
                                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" Width="300"/>
                                <DataGridTextColumn Binding="{Binding Time}" ClipboardContentBinding="{x:Null}" Header="Time" IsReadOnly="True" Width="*" SortDirection="Descending" /> <!-- Note: data is actually sorted by the ListCollectionView, in code-behind -->
                            </DataGrid.Columns>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler="showPetDetails"></EventSetter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Kind}" Value="MergedPet">
                                            <Setter Property="ContextMenu" Value="{StaticResource MergedPetRowMenu}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Kind}" Value="PetResult">
                                            <Setter Property="ContextMenu" Value="{StaticResource PetRowMenu}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Kind}" Value="Archive">
                                            <Setter Property="ContextMenu" Value="{StaticResource ArchiveRowMenu}" />
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </DockPanel>
                    <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
                    <DockPanel x:Name="PetDetailsPanel" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" />
                </Grid>
            </TabItem>
            <TabItem x:Name="TestBenchesTab" Header="Test Benches">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="4*" MinWidth="400"/>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Row="0" Grid.Column="0" Margin="2">
                        <StackPanel DockPanel.Dock="Top">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Label Margin="5,5,5,5" Padding="5,3">Search:</Label>
                                <TextBox x:Name="TestBenchSearchTextBox" Width="200" Margin="0,5,5,5" Padding="5,3" TextChanged="TestBenchSearchTextBox_TextChanged" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Bottom">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Button x:Name="explorerButton" Content="Open Selected in Explorer"  Margin="5,10,10,10" Padding="5,3" Click="explorerButton_Click" IsEnabled="{Binding SelectedItems.Count, ElementName=TestBenchGrid}"/>
                            </StackPanel>
                        </StackPanel>
                        <DataGrid x:Name="TestBenchGrid"
                              ItemsSource="{Binding TestBenchDatasets, IsAsync=True}"
                              AutoGenerateColumns="False" 
                              RowHeight="20" 
                              MaxWidth="2560"
                              MaxHeight="1600" 
                              SelectionMode="Single"
                              GridLinesVisibility="Horizontal"
                              HeadersVisibility="Column" SelectionChanged="TestBenchGrid_SelectionChanged"
                              CellStyle="{DynamicResource GridStyle}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Kind}" ClipboardContentBinding="{x:Null}" Header="DataType" IsReadOnly="True" Width="100"/>
                                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" Width="200"/>
                                <DataGridTextColumn Binding="{Binding DesignName}" ClipboardContentBinding="{x:Null}" Header="Design" IsReadOnly="True" Width="120"/>
                                <DataGridTextColumn Binding="{Binding Status}" ClipboardContentBinding="{x:Null}" Header="Status" IsReadOnly="True" Width="80"/>
                                <DataGridTextColumn Binding="{Binding Time}" ClipboardContentBinding="{x:Null}" Header="Time" IsReadOnly="True" Width="*" SortDirection="Descending"/> <!-- Note: data is actually sorted by the ListCollectionView, in code-behind -->
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Open in Explorer" Click="explorerButton_Click" />
                                    <MenuItem Header="Delete..." Click="DeleteTestBenchItem" />
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.HorizontalGridLinesBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                            </DataGrid.HorizontalGridLinesBrush>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="FAILED">
                                            <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="OK">
                                            <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="UNEXECUTED">
                                            <Setter Property="Background" Value="{StaticResource ReadyBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </DockPanel>
                    <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
                    <DockPanel x:Name="TestBenchDetailsPanel" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" />
                </Grid>
            </TabItem>
            <TabItem x:Name="JobsTab" Header="Active Jobs">
                <DockPanel Margin="2">
                    <StackPanel DockPanel.Dock="Bottom">
                        <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                            <Button x:Name="abortJobButton" Content="Abort Selected Job"  Margin="0,10,5,10" Padding="5,3" Click="abortJob_Click">
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource CountAndBoolMultiValueConverter}">
                                        <Binding Path="SelectedItems.Count" ElementName="JobGrid" />
                                        <Binding Path="SelectedItem.AllowAbort" ElementName="JobGrid" />
                                    </MultiBinding>
                                </Button.IsEnabled>
                            </Button>
                            <Button x:Name="openJobInExplorerButton" Content="Open Selected Job in Explorer"  Margin="5,10,10,10" Padding="5,3" Click="showJobInExplorer" IsEnabled="{Binding SelectedItems.Count, ElementName=JobGrid}"/>
                        </StackPanel>
                    </StackPanel>
                    <DataGrid x:Name="JobGrid"
                              ItemsSource="{Binding JobsView, IsAsync=True}"
                              AutoGenerateColumns="False" 
                              RowHeight="20" 
                              MaxWidth="2560"
                              MaxHeight="1600" 
                              SelectionMode="Single"
                              GridLinesVisibility="Horizontal"
                              HeadersVisibility="Column"
                              CellStyle="{DynamicResource GridStyle}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Title}" ClipboardContentBinding="{x:Null}" Header="Title" IsReadOnly="True" Width="200"/>
                        <DataGridTextColumn Binding="{Binding TestBenchName}" ClipboardContentBinding="{x:Null}" Header="Test Bench Name" IsReadOnly="True" Width="200"/>
                        <DataGridTextColumn Binding="{Binding WorkingDirectory}" ClipboardContentBinding="{x:Null}" Header="Working Directory" IsReadOnly="True" Width="200"/>
                        <DataGridTextColumn Binding="{Binding Status}" ClipboardContentBinding="{x:Null}" Header="Status" IsReadOnly="True" Width="80"/>
                        <DataGridTextColumn Binding="{Binding RunCommand}" ClipboardContentBinding="{x:Null}" Header="Run Command" IsReadOnly="True" Width="*"/>
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                        <ContextMenu x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="Show in Explorer" Click="showJobInExplorer" />
                            <MenuItem Header="Abort Job" Click="abortJob_Click" IsEnabled="{Binding AllowAbort}" />
                            <MenuItem Header="Re-run Job" Click="reRunJob_Click" IsEnabled="{Binding AllowReRun}"/>
                        </ContextMenu>
                    </DataGrid.Resources>
                    <DataGrid.HorizontalGridLinesBrush>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                    </DataGrid.HorizontalGridLinesBrush>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseDoubleClick" Handler="showJobInExplorer"></EventSetter>
                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Ready">
                                    <Setter Property="Background" Value="{StaticResource ReadyBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="QueuedLocal">
                                    <Setter Property="Background" Value="{StaticResource QueuedBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="QueuedOnServer">
                                    <Setter Property="Background" Value="{StaticResource QueuedBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="StartedOnServer">
                                    <Setter Property="Background" Value="{StaticResource QueuedBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="UploadPackage">
                                    <Setter Property="Background" Value="{StaticResource UploadDownloadBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="DownloadResults">
                                    <Setter Property="Background" Value="{StaticResource UploadDownloadBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="PostedToServer">
                                    <Setter Property="Background" Value="{StaticResource PostedBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="RunningOnServer">
                                    <Setter Property="Background" Value="{StaticResource RunningBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="RunningLocal">
                                    <Setter Property="Background" Value="{StaticResource RunningBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Succeeded">
                                    <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Failed">
                                    <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="FailedAbortOnServer">
                                    <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="FailedExecution">
                                    <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="FailedToUploadServer">
                                    <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="FailedToDownload">
                                    <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="FailedAbortByUser">
                                        <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="AbortOnServerRequested">
                                    <Setter Property="Background" Value="{StaticResource FailedBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>

</Window>
