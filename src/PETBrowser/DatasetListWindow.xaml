<Window x:Class="PETBrowser.DatasetListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:petBrowser="clr-namespace:PETBrowser"
        Title="Results Browser" Height="800" Width="1200" Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip" Icon="CyPhyResultsViewer.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Icons.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <petBrowser:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel Background="#FFEEF5FD">
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar x:Name="toolBar" Band="1" BandIndex="1">
                <Button x:Name="SelectResultsFolderButton" Click="SelectResultsFolderButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource FolderOpenIcon}" />
                        <TextBlock Margin="3,0,0,0">Select Results Folder</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="RefreshButton" Click="RefreshButton_OnClick" IsEnabled="{Binding DatasetLoaded}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource RefreshIcon}" />
                        <TextBlock Margin="3,0,0,0">Refresh</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="CleanupButton" Click="CleanupButton_OnClick" IsEnabled="{Binding DatasetLoaded}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource CleanIcon}" />
                        <TextBlock Margin="3,0,0,0">Cleanup</TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem DockPanel.Dock="Right" Margin="0,0,12,0" Visibility="{Binding IsLoading, Converter={StaticResource BoolVisibilityConverter}}">
                <ProgressBar Minimum="0" Maximum="{Binding LoadTotalCount}" Value="{Binding LoadProgressCount}" Width="150" Height="12"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="StatusText">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} PET(s); {1} other test bench(es)">
                            <Binding Path="PetDatasets.Count"></Binding>
                            <Binding Path="TestBenchDatasets.Count"></Binding>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <TabControl Padding="0">
            <TabItem Header="PET">
                <Grid Margin="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="4*" MinWidth="400"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" Margin="2">
                        <StackPanel DockPanel.Dock="Top">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Label Margin="5,5,5,5" Padding="5,3">Search:</Label>
                                <TextBox x:Name="PetSearchTextBox" Width="200" Margin="0,5,5,5" Padding="5,3" TextChanged="PetSearchTextBox_TextChanged" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Bottom">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Button x:Name="button" Content="Archive Selected"  Margin="0,10,5,10" Click="button_Click" Padding="5,3" IsEnabled="{Binding DatasetLoaded}"/>
                                <Button x:Name="vizButton" Content="Open Selected in Visualizer"  Margin="5,10,10,10" Click="vizButton_Click" Padding="5,3" IsEnabled="{Binding DatasetLoaded}"/>
                            </StackPanel>
                        </StackPanel>
                        <DataGrid Name="PetGrid" ItemsSource="{Binding PetDatasets, IsAsync=True}" AutoGenerateColumns="False" FrozenColumnCount="1" RowHeight="20" MaxWidth="2560" MaxHeight="1600" SelectionMode="Single" EnableRowVirtualization="False" EnableColumnVirtualization="True" GridLinesVisibility="Horizontal"  HeadersVisibility="Column" SelectionChanged="PetGrid_SelectionChanged">
                            <DataGrid.HorizontalGridLinesBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                            </DataGrid.HorizontalGridLinesBrush>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="PetRowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Delete..." Click="DeletePetItem" />
                                </ContextMenu>
                                <ContextMenu x:Key="ArchiveRowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Delete..." Click="DeletePetItem" />
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="" Width="30">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=Selected, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding Kind}" ClipboardContentBinding="{x:Null}" Header="Kind" IsReadOnly="True" Width="60"/>
                                <DataGridTextColumn Binding="{Binding Count}" ClipboardContentBinding="{x:Null}" Header="Count" IsReadOnly="True" Width="60"/>
                                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" Width="300"/>
                                <DataGridTextColumn Binding="{Binding Time}" ClipboardContentBinding="{x:Null}" Header="Time" IsReadOnly="True" Width="*"/>
                            </DataGrid.Columns>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler="showPetDetails"></EventSetter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Kind}" Value="PetResult">
                                            <Setter Property="ContextMenu" Value="{StaticResource PetRowMenu}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Kind}" Value="Archive">
                                            <Setter Property="ContextMenu" Value="{StaticResource ArchiveRowMenu}" />
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </DockPanel>
                    <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
                    <DockPanel x:Name="PetDetailsPanel" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" />
                </Grid>
            </TabItem>
            <TabItem Header="Test Benches">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="4*" MinWidth="400"/>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Row="0" Grid.Column="0" Margin="2">
                        <StackPanel DockPanel.Dock="Top">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Label Margin="5,5,5,5" Padding="5,3">Search:</Label>
                                <TextBox x:Name="TestBenchSearchTextBox" Width="200" Margin="0,5,5,5" Padding="5,3" TextChanged="TestBenchSearchTextBox_TextChanged" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Bottom">
                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                <Button x:Name="explorerButton" Content="Open Selected in Explorer"  Margin="5,10,10,10" Padding="5,3" Click="explorerButton_Click" IsEnabled="{Binding SelectedItems.Count, ElementName=TestBenchGrid}"/>
                            </StackPanel>
                        </StackPanel>
                        <DataGrid x:Name="TestBenchGrid"
                              ItemsSource="{Binding TestBenchDatasets, IsAsync=True}"
                              AutoGenerateColumns="False" 
                              RowHeight="20" 
                              MaxWidth="2560"
                              MaxHeight="1600" 
                              SelectionMode="Single"
                              GridLinesVisibility="Horizontal"
                              HeadersVisibility="Column" SelectionChanged="TestBenchGrid_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Kind}" ClipboardContentBinding="{x:Null}" Header="Kind" IsReadOnly="True" Width="100"/>
                                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" Width="200"/>
                                <DataGridTextColumn Binding="{Binding DesignName}" ClipboardContentBinding="{x:Null}" Header="Design" IsReadOnly="True" Width="120"/>
                                <DataGridTextColumn Binding="{Binding Status}" ClipboardContentBinding="{x:Null}" Header="Status" IsReadOnly="True" Width="80"/>
                                <DataGridTextColumn Binding="{Binding Time}" ClipboardContentBinding="{x:Null}" Header="Time" IsReadOnly="True" Width="*"/>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Open in Explorer" Click="explorerButton_Click" />
                                    <MenuItem Header="Delete..." Click="DeleteTestBenchItem" />
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.HorizontalGridLinesBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                            </DataGrid.HorizontalGridLinesBrush>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="FAILED">
                                            <Setter Property="Background" Value="#FFFFAFAF" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="OK">
                                            <Setter Property="Background" Value="#FFAFFFAF"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="UNEXECUTED">
                                            <Setter Property="Background" Value="#FFFFFFAF"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                    <EventSetter Event="MouseDoubleClick" Handler="showDetails"></EventSetter>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </DockPanel>
                    <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
                    <DockPanel x:Name="TestBenchDetailsPanel" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" />
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>

</Window>
