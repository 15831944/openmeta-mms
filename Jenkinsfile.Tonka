pipeline {
    agent none
    options {
        buildDiscarder(logRotator(numToKeepStr: '1000', artifactNumToKeepStr: '3'))
        timeout(time: 2, unit: 'HOURS')
    }
    stages {
        stage('Build') {
            agent {
                node {
                    label 'tonka-build'
                    customWorkspace 'c:\\jenkins_tonka_pipeline'
                }
            }
            steps {
                checkout scm: [$class: 'GitSCM', 
                  userRemoteConfigs: [[refspec: '+refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*']]]

                script {
                    releaseId = bat(script: '@git describe --match v*', returnStdout: true).trim()
                }

                bat("del deploy\\META_*.exe")

                bat($/
git tag

git ls-remote
/$)
                bat($/echo TONKA_BUILD_NUMBER=%BUILD_NUMBER% > build.properties/$)
            }
            post {
                always {
                    junit keepLongStdio: true, testResults: 'test/junit_results.xml'
                    archiveArtifacts artifacts: "deploy/META*.msi,deploy/META_x64.wixpdb,deploy/*.msp,deploy/META_${releaseId}.exe,deploy/META_${releaseId}_offline.exe"
                    publishHTML([allowMissing: true, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'docs\\_build\\html', reportFiles: 'index.html', reportName: 'OpenMETA Documentation', reportTitles: ''])
                }
            }
        }
    }
}

// set GIT_ALTERNATE_OBJECT_DIRECTORIES=c:\meta-core\.git\objects
